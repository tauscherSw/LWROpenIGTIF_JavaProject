/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.0
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package openIGTLink.swig;

public class IGTLutilJNI {
    public final static native int IGTL_SIZEOF_CHAR_get();

    public final static native int IGTL_SIZEOF_INT_get();

    public final static native int IGTL_SIZEOF_SHORT_get();

    public final static native int IGTL_SIZEOF_LONG_get();

    public final static native int IGTL_SIZEOF_FLOAT_get();

    public final static native int IGTL_SIZEOF_DOUBLE_get();

    public final static native int IGTL_TYPE_USE_LONG_LONG_get();

    public final static native int IGTL_SIZEOF_LONG_LONG_get();

    public final static native long new_ByteArr(int jarg1);

    public final static native void delete_ByteArr(long jarg1);

    public final static native short ByteArr_getitem(long jarg1,
	    ByteArr jarg1_, int jarg2);

    public final static native void ByteArr_setitem(long jarg1, ByteArr jarg1_,
	    int jarg2, short jarg3);

    public final static native long ByteArr_cast(long jarg1, ByteArr jarg1_);

    public final static native long ByteArr_frompointer(long jarg1);

    public final static native int IGTL_SCALAR_INT8_get();

    public final static native int IGTL_SCALAR_UINT8_get();

    public final static native int IGTL_SCALAR_INT16_get();

    public final static native int IGTL_SCALAR_UINT16_get();

    public final static native int IGTL_SCALAR_INT32_get();

    public final static native int IGTL_SCALAR_UINT32_get();

    public final static native int IGTL_SCALAR_FLOAT32_get();

    public final static native int IGTL_SCALAR_FLOAT64_get();

    public final static native int IGTL_SCALAR_COMPLEX_get();

    public final static native int igtl_is_little_endian();

    public final static native java.math.BigInteger crc64(long jarg1,
	    java.math.BigInteger jarg2, java.math.BigInteger jarg3);

    public final static native long igtl_nanosec_to_frac(long jarg1);

    public final static native long igtl_frac_to_nanosec(long jarg1);

    public final static native void igtl_message_dump_hex(long jarg1,
	    long jarg2, int jarg3);

    public final static native long igtl_get_scalar_size(int jarg1);
}
